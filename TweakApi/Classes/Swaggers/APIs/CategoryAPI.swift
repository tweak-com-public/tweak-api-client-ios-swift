//
// CategoryAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class CategoryAPI: APIBase {
    /**
     Count instances of the model matched by where from the data source.
     
     - parameter _where: (query) Criteria to match model instances (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func categoryCount(_where _where: String? = nil, completion: ((data: TWInlineResponse200?, error: ErrorType?) -> Void)) {
        categoryCountWithRequestBuilder(_where: _where).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Count instances of the model matched by where from the data source.
     - GET /Categories/count
     - API Key:
       - type: apiKey access_token (QUERY)
       - name: access_token
     - examples: [{contentType=application/json, example={
  "count" : 1.3579000000000001069366817318950779736042022705078125
}}]
     
     - parameter _where: (query) Criteria to match model instances (optional)

     - returns: RequestBuilder<TWInlineResponse200> 
     */
    public class func categoryCountWithRequestBuilder(_where _where: String? = nil) -> RequestBuilder<TWInlineResponse200> {
        let path = "/Categories/count"
        let URLString = TweakApiAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "where": _where
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<TWInlineResponse200>.Type = TweakApiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Create a new instance of the model and persist it into the data source.
     
     - parameter data: (body) Model instance data (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func categoryCreate(data data: TWCategory? = nil, completion: ((data: TWCategory?, error: ErrorType?) -> Void)) {
        categoryCreateWithRequestBuilder(data: data).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Create a new instance of the model and persist it into the data source.
     - POST /Categories
     - API Key:
       - type: apiKey access_token (QUERY)
       - name: access_token
     - examples: [{contentType=application/json, example={
  "parent" : "{}",
  "children" : [ "{}" ],
  "name" : "aeiou",
  "description" : "aeiou",
  "designId" : 1.3579000000000001069366817318950779736042022705078125,
  "id" : 1.3579000000000001069366817318950779736042022705078125,
  "categoryId" : 1.3579000000000001069366817318950779736042022705078125,
  "parentId" : 1.3579000000000001069366817318950779736042022705078125
}}]
     
     - parameter data: (body) Model instance data (optional)

     - returns: RequestBuilder<TWCategory> 
     */
    public class func categoryCreateWithRequestBuilder(data data: TWCategory? = nil) -> RequestBuilder<TWCategory> {
        let path = "/Categories"
        let URLString = TweakApiAPI.basePath + path
        let parameters = data?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<TWCategory>.Type = TweakApiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Create a change stream.
     
     - parameter options: (query)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func categoryCreateChangeStreamGetCategoriesChangeStream(options options: String? = nil, completion: ((data: NSURL?, error: ErrorType?) -> Void)) {
        categoryCreateChangeStreamGetCategoriesChangeStreamWithRequestBuilder(options: options).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Create a change stream.
     - GET /Categories/change-stream
     - API Key:
       - type: apiKey access_token (QUERY)
       - name: access_token
     - examples: [{contentType=application/json, example=""}]
     
     - parameter options: (query)  (optional)

     - returns: RequestBuilder<NSURL> 
     */
    public class func categoryCreateChangeStreamGetCategoriesChangeStreamWithRequestBuilder(options options: String? = nil) -> RequestBuilder<NSURL> {
        let path = "/Categories/change-stream"
        let URLString = TweakApiAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "options": options
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<NSURL>.Type = TweakApiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Create a change stream.
     
     - parameter options: (form)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func categoryCreateChangeStreamPostCategoriesChangeStream(options options: String? = nil, completion: ((data: NSURL?, error: ErrorType?) -> Void)) {
        categoryCreateChangeStreamPostCategoriesChangeStreamWithRequestBuilder(options: options).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Create a change stream.
     - POST /Categories/change-stream
     - API Key:
       - type: apiKey access_token (QUERY)
       - name: access_token
     - examples: [{contentType=application/json, example=""}]
     
     - parameter options: (form)  (optional)

     - returns: RequestBuilder<NSURL> 
     */
    public class func categoryCreateChangeStreamPostCategoriesChangeStreamWithRequestBuilder(options options: String? = nil) -> RequestBuilder<NSURL> {
        let path = "/Categories/change-stream"
        let URLString = TweakApiAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "options": options
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<NSURL>.Type = TweakApiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Delete a model instance by {{id}} from the data source.
     
     - parameter id: (path) Model id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func categoryDeleteById(id id: String, completion: ((data: AnyObject?, error: ErrorType?) -> Void)) {
        categoryDeleteByIdWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Delete a model instance by {{id}} from the data source.
     - DELETE /Categories/{id}
     - API Key:
       - type: apiKey access_token (QUERY)
       - name: access_token
     - examples: [{contentType=application/json, example="{}"}]
     
     - parameter id: (path) Model id 

     - returns: RequestBuilder<AnyObject> 
     */
    public class func categoryDeleteByIdWithRequestBuilder(id id: String) -> RequestBuilder<AnyObject> {
        var path = "/Categories/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = TweakApiAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<AnyObject>.Type = TweakApiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Check whether a model instance exists in the data source.
     
     - parameter id: (path) Model id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func categoryExistsGetCategoriesidExists(id id: String, completion: ((data: TWInlineResponse2002?, error: ErrorType?) -> Void)) {
        categoryExistsGetCategoriesidExistsWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Check whether a model instance exists in the data source.
     - GET /Categories/{id}/exists
     - API Key:
       - type: apiKey access_token (QUERY)
       - name: access_token
     - examples: [{contentType=application/json, example={
  "exists" : true
}}]
     
     - parameter id: (path) Model id 

     - returns: RequestBuilder<TWInlineResponse2002> 
     */
    public class func categoryExistsGetCategoriesidExistsWithRequestBuilder(id id: String) -> RequestBuilder<TWInlineResponse2002> {
        var path = "/Categories/{id}/exists"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = TweakApiAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<TWInlineResponse2002>.Type = TweakApiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Check whether a model instance exists in the data source.
     
     - parameter id: (path) Model id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func categoryExistsHeadCategoriesid(id id: String, completion: ((data: TWInlineResponse2002?, error: ErrorType?) -> Void)) {
        categoryExistsHeadCategoriesidWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Check whether a model instance exists in the data source.
     - HEAD /Categories/{id}
     - API Key:
       - type: apiKey access_token (QUERY)
       - name: access_token
     - examples: [{contentType=application/json, example={
  "exists" : true
}}]
     
     - parameter id: (path) Model id 

     - returns: RequestBuilder<TWInlineResponse2002> 
     */
    public class func categoryExistsHeadCategoriesidWithRequestBuilder(id id: String) -> RequestBuilder<TWInlineResponse2002> {
        var path = "/Categories/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = TweakApiAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<TWInlineResponse2002>.Type = TweakApiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "HEAD", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Find all instances of the model matched by filter from the data source.
     
     - parameter filter: (query) Filter defining fields, where, include, order, offset, and limit (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func categoryFind(filter filter: String? = nil, completion: ((data: [TWCategory]?, error: ErrorType?) -> Void)) {
        categoryFindWithRequestBuilder(filter: filter).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Find all instances of the model matched by filter from the data source.
     - GET /Categories
     - API Key:
       - type: apiKey access_token (QUERY)
       - name: access_token
     - examples: [{contentType=application/json, example=[ {
  "parent" : "{}",
  "children" : [ "{}" ],
  "name" : "aeiou",
  "description" : "aeiou",
  "designId" : 1.3579000000000001069366817318950779736042022705078125,
  "id" : 1.3579000000000001069366817318950779736042022705078125,
  "categoryId" : 1.3579000000000001069366817318950779736042022705078125,
  "parentId" : 1.3579000000000001069366817318950779736042022705078125
} ]}]
     
     - parameter filter: (query) Filter defining fields, where, include, order, offset, and limit (optional)

     - returns: RequestBuilder<[TWCategory]> 
     */
    public class func categoryFindWithRequestBuilder(filter filter: String? = nil) -> RequestBuilder<[TWCategory]> {
        let path = "/Categories"
        let URLString = TweakApiAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "filter": filter
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<[TWCategory]>.Type = TweakApiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Find a model instance by {{id}} from the data source.
     
     - parameter id: (path) Model id 
     - parameter filter: (query) Filter defining fields and include (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func categoryFindById(id id: String, filter: String? = nil, completion: ((data: TWCategory?, error: ErrorType?) -> Void)) {
        categoryFindByIdWithRequestBuilder(id: id, filter: filter).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Find a model instance by {{id}} from the data source.
     - GET /Categories/{id}
     - API Key:
       - type: apiKey access_token (QUERY)
       - name: access_token
     - examples: [{contentType=application/json, example={
  "parent" : "{}",
  "children" : [ "{}" ],
  "name" : "aeiou",
  "description" : "aeiou",
  "designId" : 1.3579000000000001069366817318950779736042022705078125,
  "id" : 1.3579000000000001069366817318950779736042022705078125,
  "categoryId" : 1.3579000000000001069366817318950779736042022705078125,
  "parentId" : 1.3579000000000001069366817318950779736042022705078125
}}]
     
     - parameter id: (path) Model id 
     - parameter filter: (query) Filter defining fields and include (optional)

     - returns: RequestBuilder<TWCategory> 
     */
    public class func categoryFindByIdWithRequestBuilder(id id: String, filter: String? = nil) -> RequestBuilder<TWCategory> {
        var path = "/Categories/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = TweakApiAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "filter": filter
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<TWCategory>.Type = TweakApiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Find first instance of the model matched by filter from the data source.
     
     - parameter filter: (query) Filter defining fields, where, include, order, offset, and limit (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func categoryFindOne(filter filter: String? = nil, completion: ((data: TWCategory?, error: ErrorType?) -> Void)) {
        categoryFindOneWithRequestBuilder(filter: filter).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Find first instance of the model matched by filter from the data source.
     - GET /Categories/findOne
     - API Key:
       - type: apiKey access_token (QUERY)
       - name: access_token
     - examples: [{contentType=application/json, example={
  "parent" : "{}",
  "children" : [ "{}" ],
  "name" : "aeiou",
  "description" : "aeiou",
  "designId" : 1.3579000000000001069366817318950779736042022705078125,
  "id" : 1.3579000000000001069366817318950779736042022705078125,
  "categoryId" : 1.3579000000000001069366817318950779736042022705078125,
  "parentId" : 1.3579000000000001069366817318950779736042022705078125
}}]
     
     - parameter filter: (query) Filter defining fields, where, include, order, offset, and limit (optional)

     - returns: RequestBuilder<TWCategory> 
     */
    public class func categoryFindOneWithRequestBuilder(filter filter: String? = nil) -> RequestBuilder<TWCategory> {
        let path = "/Categories/findOne"
        let URLString = TweakApiAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "filter": filter
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<TWCategory>.Type = TweakApiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Counts children of Category.
     
     - parameter id: (path) Category id 
     - parameter _where: (query) Criteria to match model instances (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func categoryPrototypeCountChildren(id id: String, _where: String? = nil, completion: ((data: TWInlineResponse200?, error: ErrorType?) -> Void)) {
        categoryPrototypeCountChildrenWithRequestBuilder(id: id, _where: _where).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Counts children of Category.
     - GET /Categories/{id}/children/count
     - API Key:
       - type: apiKey access_token (QUERY)
       - name: access_token
     - examples: [{contentType=application/json, example={
  "count" : 1.3579000000000001069366817318950779736042022705078125
}}]
     
     - parameter id: (path) Category id 
     - parameter _where: (query) Criteria to match model instances (optional)

     - returns: RequestBuilder<TWInlineResponse200> 
     */
    public class func categoryPrototypeCountChildrenWithRequestBuilder(id id: String, _where: String? = nil) -> RequestBuilder<TWInlineResponse200> {
        var path = "/Categories/{id}/children/count"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = TweakApiAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "where": _where
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<TWInlineResponse200>.Type = TweakApiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Creates a new instance in children of this model.
     
     - parameter id: (path) Category id 
     - parameter data: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func categoryPrototypeCreateChildren(id id: String, data: TWCategory? = nil, completion: ((data: TWCategory?, error: ErrorType?) -> Void)) {
        categoryPrototypeCreateChildrenWithRequestBuilder(id: id, data: data).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Creates a new instance in children of this model.
     - POST /Categories/{id}/children
     - API Key:
       - type: apiKey access_token (QUERY)
       - name: access_token
     - examples: [{contentType=application/json, example={
  "parent" : "{}",
  "children" : [ "{}" ],
  "name" : "aeiou",
  "description" : "aeiou",
  "designId" : 1.3579000000000001069366817318950779736042022705078125,
  "id" : 1.3579000000000001069366817318950779736042022705078125,
  "categoryId" : 1.3579000000000001069366817318950779736042022705078125,
  "parentId" : 1.3579000000000001069366817318950779736042022705078125
}}]
     
     - parameter id: (path) Category id 
     - parameter data: (body)  (optional)

     - returns: RequestBuilder<TWCategory> 
     */
    public class func categoryPrototypeCreateChildrenWithRequestBuilder(id id: String, data: TWCategory? = nil) -> RequestBuilder<TWCategory> {
        var path = "/Categories/{id}/children"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = TweakApiAPI.basePath + path
        let parameters = data?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<TWCategory>.Type = TweakApiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Deletes all children of this model.
     
     - parameter id: (path) Category id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func categoryPrototypeDeleteChildren(id id: String, completion: ((error: ErrorType?) -> Void)) {
        categoryPrototypeDeleteChildrenWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     Deletes all children of this model.
     - DELETE /Categories/{id}/children
     - API Key:
       - type: apiKey access_token (QUERY)
       - name: access_token
     
     - parameter id: (path) Category id 

     - returns: RequestBuilder<Void> 
     */
    public class func categoryPrototypeDeleteChildrenWithRequestBuilder(id id: String) -> RequestBuilder<Void> {
        var path = "/Categories/{id}/children"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = TweakApiAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = TweakApiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Delete a related item by id for children.
     
     - parameter id: (path) Category id 
     - parameter fk: (path) Foreign key for children 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func categoryPrototypeDestroyByIdChildren(id id: String, fk: String, completion: ((error: ErrorType?) -> Void)) {
        categoryPrototypeDestroyByIdChildrenWithRequestBuilder(id: id, fk: fk).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     Delete a related item by id for children.
     - DELETE /Categories/{id}/children/{fk}
     - API Key:
       - type: apiKey access_token (QUERY)
       - name: access_token
     
     - parameter id: (path) Category id 
     - parameter fk: (path) Foreign key for children 

     - returns: RequestBuilder<Void> 
     */
    public class func categoryPrototypeDestroyByIdChildrenWithRequestBuilder(id id: String, fk: String) -> RequestBuilder<Void> {
        var path = "/Categories/{id}/children/{fk}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{fk}", withString: "\(fk)", options: .LiteralSearch, range: nil)
        let URLString = TweakApiAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = TweakApiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Find a related item by id for children.
     
     - parameter id: (path) Category id 
     - parameter fk: (path) Foreign key for children 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func categoryPrototypeFindByIdChildren(id id: String, fk: String, completion: ((data: TWCategory?, error: ErrorType?) -> Void)) {
        categoryPrototypeFindByIdChildrenWithRequestBuilder(id: id, fk: fk).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Find a related item by id for children.
     - GET /Categories/{id}/children/{fk}
     - API Key:
       - type: apiKey access_token (QUERY)
       - name: access_token
     - examples: [{contentType=application/json, example={
  "parent" : "{}",
  "children" : [ "{}" ],
  "name" : "aeiou",
  "description" : "aeiou",
  "designId" : 1.3579000000000001069366817318950779736042022705078125,
  "id" : 1.3579000000000001069366817318950779736042022705078125,
  "categoryId" : 1.3579000000000001069366817318950779736042022705078125,
  "parentId" : 1.3579000000000001069366817318950779736042022705078125
}}]
     
     - parameter id: (path) Category id 
     - parameter fk: (path) Foreign key for children 

     - returns: RequestBuilder<TWCategory> 
     */
    public class func categoryPrototypeFindByIdChildrenWithRequestBuilder(id id: String, fk: String) -> RequestBuilder<TWCategory> {
        var path = "/Categories/{id}/children/{fk}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{fk}", withString: "\(fk)", options: .LiteralSearch, range: nil)
        let URLString = TweakApiAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<TWCategory>.Type = TweakApiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Queries children of Category.
     
     - parameter id: (path) Category id 
     - parameter filter: (query)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func categoryPrototypeGetChildren(id id: String, filter: String? = nil, completion: ((data: [TWCategory]?, error: ErrorType?) -> Void)) {
        categoryPrototypeGetChildrenWithRequestBuilder(id: id, filter: filter).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Queries children of Category.
     - GET /Categories/{id}/children
     - API Key:
       - type: apiKey access_token (QUERY)
       - name: access_token
     - examples: [{contentType=application/json, example=[ {
  "parent" : "{}",
  "children" : [ "{}" ],
  "name" : "aeiou",
  "description" : "aeiou",
  "designId" : 1.3579000000000001069366817318950779736042022705078125,
  "id" : 1.3579000000000001069366817318950779736042022705078125,
  "categoryId" : 1.3579000000000001069366817318950779736042022705078125,
  "parentId" : 1.3579000000000001069366817318950779736042022705078125
} ]}]
     
     - parameter id: (path) Category id 
     - parameter filter: (query)  (optional)

     - returns: RequestBuilder<[TWCategory]> 
     */
    public class func categoryPrototypeGetChildrenWithRequestBuilder(id id: String, filter: String? = nil) -> RequestBuilder<[TWCategory]> {
        var path = "/Categories/{id}/children"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = TweakApiAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "filter": filter
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<[TWCategory]>.Type = TweakApiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Fetches belongsTo relation parent.
     
     - parameter id: (path) Category id 
     - parameter refresh: (query)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func categoryPrototypeGetParent(id id: String, refresh: Bool? = nil, completion: ((data: TWCategory?, error: ErrorType?) -> Void)) {
        categoryPrototypeGetParentWithRequestBuilder(id: id, refresh: refresh).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Fetches belongsTo relation parent.
     - GET /Categories/{id}/parent
     - API Key:
       - type: apiKey access_token (QUERY)
       - name: access_token
     - examples: [{contentType=application/json, example={
  "parent" : "{}",
  "children" : [ "{}" ],
  "name" : "aeiou",
  "description" : "aeiou",
  "designId" : 1.3579000000000001069366817318950779736042022705078125,
  "id" : 1.3579000000000001069366817318950779736042022705078125,
  "categoryId" : 1.3579000000000001069366817318950779736042022705078125,
  "parentId" : 1.3579000000000001069366817318950779736042022705078125
}}]
     
     - parameter id: (path) Category id 
     - parameter refresh: (query)  (optional)

     - returns: RequestBuilder<TWCategory> 
     */
    public class func categoryPrototypeGetParentWithRequestBuilder(id id: String, refresh: Bool? = nil) -> RequestBuilder<TWCategory> {
        var path = "/Categories/{id}/parent"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = TweakApiAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "refresh": refresh
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<TWCategory>.Type = TweakApiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Patch attributes for a model instance and persist it into the data source.
     
     - parameter id: (path) Category id 
     - parameter data: (body) An object of model property name/value pairs (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func categoryPrototypeUpdateAttributesPatchCategoriesid(id id: String, data: TWCategory? = nil, completion: ((data: TWCategory?, error: ErrorType?) -> Void)) {
        categoryPrototypeUpdateAttributesPatchCategoriesidWithRequestBuilder(id: id, data: data).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Patch attributes for a model instance and persist it into the data source.
     - PATCH /Categories/{id}
     - API Key:
       - type: apiKey access_token (QUERY)
       - name: access_token
     - examples: [{contentType=application/json, example={
  "parent" : "{}",
  "children" : [ "{}" ],
  "name" : "aeiou",
  "description" : "aeiou",
  "designId" : 1.3579000000000001069366817318950779736042022705078125,
  "id" : 1.3579000000000001069366817318950779736042022705078125,
  "categoryId" : 1.3579000000000001069366817318950779736042022705078125,
  "parentId" : 1.3579000000000001069366817318950779736042022705078125
}}]
     
     - parameter id: (path) Category id 
     - parameter data: (body) An object of model property name/value pairs (optional)

     - returns: RequestBuilder<TWCategory> 
     */
    public class func categoryPrototypeUpdateAttributesPatchCategoriesidWithRequestBuilder(id id: String, data: TWCategory? = nil) -> RequestBuilder<TWCategory> {
        var path = "/Categories/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = TweakApiAPI.basePath + path
        let parameters = data?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<TWCategory>.Type = TweakApiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PATCH", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Patch attributes for a model instance and persist it into the data source.
     
     - parameter id: (path) Category id 
     - parameter data: (body) An object of model property name/value pairs (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func categoryPrototypeUpdateAttributesPutCategoriesid(id id: String, data: TWCategory? = nil, completion: ((data: TWCategory?, error: ErrorType?) -> Void)) {
        categoryPrototypeUpdateAttributesPutCategoriesidWithRequestBuilder(id: id, data: data).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Patch attributes for a model instance and persist it into the data source.
     - PUT /Categories/{id}
     - API Key:
       - type: apiKey access_token (QUERY)
       - name: access_token
     - examples: [{contentType=application/json, example={
  "parent" : "{}",
  "children" : [ "{}" ],
  "name" : "aeiou",
  "description" : "aeiou",
  "designId" : 1.3579000000000001069366817318950779736042022705078125,
  "id" : 1.3579000000000001069366817318950779736042022705078125,
  "categoryId" : 1.3579000000000001069366817318950779736042022705078125,
  "parentId" : 1.3579000000000001069366817318950779736042022705078125
}}]
     
     - parameter id: (path) Category id 
     - parameter data: (body) An object of model property name/value pairs (optional)

     - returns: RequestBuilder<TWCategory> 
     */
    public class func categoryPrototypeUpdateAttributesPutCategoriesidWithRequestBuilder(id id: String, data: TWCategory? = nil) -> RequestBuilder<TWCategory> {
        var path = "/Categories/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = TweakApiAPI.basePath + path
        let parameters = data?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<TWCategory>.Type = TweakApiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Update a related item by id for children.
     
     - parameter id: (path) Category id 
     - parameter fk: (path) Foreign key for children 
     - parameter data: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func categoryPrototypeUpdateByIdChildren(id id: String, fk: String, data: TWCategory? = nil, completion: ((data: TWCategory?, error: ErrorType?) -> Void)) {
        categoryPrototypeUpdateByIdChildrenWithRequestBuilder(id: id, fk: fk, data: data).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Update a related item by id for children.
     - PUT /Categories/{id}/children/{fk}
     - API Key:
       - type: apiKey access_token (QUERY)
       - name: access_token
     - examples: [{contentType=application/json, example={
  "parent" : "{}",
  "children" : [ "{}" ],
  "name" : "aeiou",
  "description" : "aeiou",
  "designId" : 1.3579000000000001069366817318950779736042022705078125,
  "id" : 1.3579000000000001069366817318950779736042022705078125,
  "categoryId" : 1.3579000000000001069366817318950779736042022705078125,
  "parentId" : 1.3579000000000001069366817318950779736042022705078125
}}]
     
     - parameter id: (path) Category id 
     - parameter fk: (path) Foreign key for children 
     - parameter data: (body)  (optional)

     - returns: RequestBuilder<TWCategory> 
     */
    public class func categoryPrototypeUpdateByIdChildrenWithRequestBuilder(id id: String, fk: String, data: TWCategory? = nil) -> RequestBuilder<TWCategory> {
        var path = "/Categories/{id}/children/{fk}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{fk}", withString: "\(fk)", options: .LiteralSearch, range: nil)
        let URLString = TweakApiAPI.basePath + path
        let parameters = data?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<TWCategory>.Type = TweakApiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Replace attributes for a model instance and persist it into the data source.
     
     - parameter id: (path) Model id 
     - parameter data: (body) Model instance data (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func categoryReplaceById(id id: String, data: TWCategory? = nil, completion: ((data: TWCategory?, error: ErrorType?) -> Void)) {
        categoryReplaceByIdWithRequestBuilder(id: id, data: data).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Replace attributes for a model instance and persist it into the data source.
     - POST /Categories/{id}/replace
     - API Key:
       - type: apiKey access_token (QUERY)
       - name: access_token
     - examples: [{contentType=application/json, example={
  "parent" : "{}",
  "children" : [ "{}" ],
  "name" : "aeiou",
  "description" : "aeiou",
  "designId" : 1.3579000000000001069366817318950779736042022705078125,
  "id" : 1.3579000000000001069366817318950779736042022705078125,
  "categoryId" : 1.3579000000000001069366817318950779736042022705078125,
  "parentId" : 1.3579000000000001069366817318950779736042022705078125
}}]
     
     - parameter id: (path) Model id 
     - parameter data: (body) Model instance data (optional)

     - returns: RequestBuilder<TWCategory> 
     */
    public class func categoryReplaceByIdWithRequestBuilder(id id: String, data: TWCategory? = nil) -> RequestBuilder<TWCategory> {
        var path = "/Categories/{id}/replace"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = TweakApiAPI.basePath + path
        let parameters = data?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<TWCategory>.Type = TweakApiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Replace an existing model instance or insert a new one into the data source.
     
     - parameter data: (body) Model instance data (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func categoryReplaceOrCreate(data data: TWCategory? = nil, completion: ((data: TWCategory?, error: ErrorType?) -> Void)) {
        categoryReplaceOrCreateWithRequestBuilder(data: data).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Replace an existing model instance or insert a new one into the data source.
     - POST /Categories/replaceOrCreate
     - API Key:
       - type: apiKey access_token (QUERY)
       - name: access_token
     - examples: [{contentType=application/json, example={
  "parent" : "{}",
  "children" : [ "{}" ],
  "name" : "aeiou",
  "description" : "aeiou",
  "designId" : 1.3579000000000001069366817318950779736042022705078125,
  "id" : 1.3579000000000001069366817318950779736042022705078125,
  "categoryId" : 1.3579000000000001069366817318950779736042022705078125,
  "parentId" : 1.3579000000000001069366817318950779736042022705078125
}}]
     
     - parameter data: (body) Model instance data (optional)

     - returns: RequestBuilder<TWCategory> 
     */
    public class func categoryReplaceOrCreateWithRequestBuilder(data data: TWCategory? = nil) -> RequestBuilder<TWCategory> {
        let path = "/Categories/replaceOrCreate"
        let URLString = TweakApiAPI.basePath + path
        let parameters = data?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<TWCategory>.Type = TweakApiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Update instances of the model matched by {{where}} from the data source.
     
     - parameter _where: (query) Criteria to match model instances (optional)
     - parameter data: (body) An object of model property name/value pairs (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func categoryUpdateAll(_where _where: String? = nil, data: TWCategory? = nil, completion: ((data: TWInlineResponse2001?, error: ErrorType?) -> Void)) {
        categoryUpdateAllWithRequestBuilder(_where: _where, data: data).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Update instances of the model matched by {{where}} from the data source.
     - POST /Categories/update
     - API Key:
       - type: apiKey access_token (QUERY)
       - name: access_token
     - examples: [{contentType=application/json, example={
  "count" : 1.3579000000000001069366817318950779736042022705078125
}}]
     
     - parameter _where: (query) Criteria to match model instances (optional)
     - parameter data: (body) An object of model property name/value pairs (optional)

     - returns: RequestBuilder<TWInlineResponse2001> 
     */
    public class func categoryUpdateAllWithRequestBuilder(_where _where: String? = nil, data: TWCategory? = nil) -> RequestBuilder<TWInlineResponse2001> {
        let path = "/Categories/update"
        let URLString = TweakApiAPI.basePath + path
        let parameters = data?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<TWInlineResponse2001>.Type = TweakApiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Patch an existing model instance or insert a new one into the data source.
     
     - parameter data: (body) Model instance data (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func categoryUpsertPatchCategories(data data: TWCategory? = nil, completion: ((data: TWCategory?, error: ErrorType?) -> Void)) {
        categoryUpsertPatchCategoriesWithRequestBuilder(data: data).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Patch an existing model instance or insert a new one into the data source.
     - PATCH /Categories
     - API Key:
       - type: apiKey access_token (QUERY)
       - name: access_token
     - examples: [{contentType=application/json, example={
  "parent" : "{}",
  "children" : [ "{}" ],
  "name" : "aeiou",
  "description" : "aeiou",
  "designId" : 1.3579000000000001069366817318950779736042022705078125,
  "id" : 1.3579000000000001069366817318950779736042022705078125,
  "categoryId" : 1.3579000000000001069366817318950779736042022705078125,
  "parentId" : 1.3579000000000001069366817318950779736042022705078125
}}]
     
     - parameter data: (body) Model instance data (optional)

     - returns: RequestBuilder<TWCategory> 
     */
    public class func categoryUpsertPatchCategoriesWithRequestBuilder(data data: TWCategory? = nil) -> RequestBuilder<TWCategory> {
        let path = "/Categories"
        let URLString = TweakApiAPI.basePath + path
        let parameters = data?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<TWCategory>.Type = TweakApiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PATCH", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Patch an existing model instance or insert a new one into the data source.
     
     - parameter data: (body) Model instance data (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func categoryUpsertPutCategories(data data: TWCategory? = nil, completion: ((data: TWCategory?, error: ErrorType?) -> Void)) {
        categoryUpsertPutCategoriesWithRequestBuilder(data: data).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Patch an existing model instance or insert a new one into the data source.
     - PUT /Categories
     - API Key:
       - type: apiKey access_token (QUERY)
       - name: access_token
     - examples: [{contentType=application/json, example={
  "parent" : "{}",
  "children" : [ "{}" ],
  "name" : "aeiou",
  "description" : "aeiou",
  "designId" : 1.3579000000000001069366817318950779736042022705078125,
  "id" : 1.3579000000000001069366817318950779736042022705078125,
  "categoryId" : 1.3579000000000001069366817318950779736042022705078125,
  "parentId" : 1.3579000000000001069366817318950779736042022705078125
}}]
     
     - parameter data: (body) Model instance data (optional)

     - returns: RequestBuilder<TWCategory> 
     */
    public class func categoryUpsertPutCategoriesWithRequestBuilder(data data: TWCategory? = nil) -> RequestBuilder<TWCategory> {
        let path = "/Categories"
        let URLString = TweakApiAPI.basePath + path
        let parameters = data?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<TWCategory>.Type = TweakApiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Update an existing model instance or insert a new one into the data source based on the where criteria.
     
     - parameter _where: (query) Criteria to match model instances (optional)
     - parameter data: (body) An object of model property name/value pairs (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func categoryUpsertWithWhere(_where _where: String? = nil, data: TWCategory? = nil, completion: ((data: TWCategory?, error: ErrorType?) -> Void)) {
        categoryUpsertWithWhereWithRequestBuilder(_where: _where, data: data).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Update an existing model instance or insert a new one into the data source based on the where criteria.
     - POST /Categories/upsertWithWhere
     - API Key:
       - type: apiKey access_token (QUERY)
       - name: access_token
     - examples: [{contentType=application/json, example={
  "parent" : "{}",
  "children" : [ "{}" ],
  "name" : "aeiou",
  "description" : "aeiou",
  "designId" : 1.3579000000000001069366817318950779736042022705078125,
  "id" : 1.3579000000000001069366817318950779736042022705078125,
  "categoryId" : 1.3579000000000001069366817318950779736042022705078125,
  "parentId" : 1.3579000000000001069366817318950779736042022705078125
}}]
     
     - parameter _where: (query) Criteria to match model instances (optional)
     - parameter data: (body) An object of model property name/value pairs (optional)

     - returns: RequestBuilder<TWCategory> 
     */
    public class func categoryUpsertWithWhereWithRequestBuilder(_where _where: String? = nil, data: TWCategory? = nil) -> RequestBuilder<TWCategory> {
        let path = "/Categories/upsertWithWhere"
        let URLString = TweakApiAPI.basePath + path
        let parameters = data?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<TWCategory>.Type = TweakApiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

}
