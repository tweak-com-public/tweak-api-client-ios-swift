//
// DesignAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class DesignAPI: APIBase {
    /**
     Count instances of the model matched by where from the data source.
     
     - parameter _where: (query) Criteria to match model instances (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func designCount(_where _where: String? = nil, completion: ((data: TWInlineResponse200?, error: ErrorType?) -> Void)) {
        designCountWithRequestBuilder(_where: _where).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Count instances of the model matched by where from the data source.
     - GET /Designs/count
     - API Key:
       - type: apiKey access_token (QUERY)
       - name: access_token
     - examples: [{contentType=application/json, example={
  "count" : 1.3579000000000001069366817318950779736042022705078125
}}]
     
     - parameter _where: (query) Criteria to match model instances (optional)

     - returns: RequestBuilder<TWInlineResponse200> 
     */
    public class func designCountWithRequestBuilder(_where _where: String? = nil) -> RequestBuilder<TWInlineResponse200> {
        let path = "/Designs/count"
        let URLString = TweakApiAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "where": _where
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<TWInlineResponse200>.Type = TweakApiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Create a new instance of the model and persist it into the data source.
     
     - parameter data: (body) Model instance data (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func designCreate(data data: TWDesign? = nil, completion: ((data: TWDesign?, error: ErrorType?) -> Void)) {
        designCreateWithRequestBuilder(data: data).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Create a new instance of the model and persist it into the data source.
     - POST /Designs
     - API Key:
       - type: apiKey access_token (QUERY)
       - name: access_token
     - examples: [{contentType=application/json, example={
  "image" : "aeiou",
  "thumbnail" : "aeiou",
  "name" : "aeiou",
  "customerId" : 1.3579000000000001069366817318950779736042022705078125,
  "id" : 1.3579000000000001069366817318950779736042022705078125,
  "categories" : [ "{}" ],
  "object" : "{}",
  "tags" : [ "{}" ],
  "customer" : "{}"
}}]
     
     - parameter data: (body) Model instance data (optional)

     - returns: RequestBuilder<TWDesign> 
     */
    public class func designCreateWithRequestBuilder(data data: TWDesign? = nil) -> RequestBuilder<TWDesign> {
        let path = "/Designs"
        let URLString = TweakApiAPI.basePath + path
        let parameters = data?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<TWDesign>.Type = TweakApiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Create a change stream.
     
     - parameter options: (query)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func designCreateChangeStreamGetDesignsChangeStream(options options: String? = nil, completion: ((data: NSURL?, error: ErrorType?) -> Void)) {
        designCreateChangeStreamGetDesignsChangeStreamWithRequestBuilder(options: options).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Create a change stream.
     - GET /Designs/change-stream
     - API Key:
       - type: apiKey access_token (QUERY)
       - name: access_token
     - examples: [{contentType=application/json, example=""}]
     
     - parameter options: (query)  (optional)

     - returns: RequestBuilder<NSURL> 
     */
    public class func designCreateChangeStreamGetDesignsChangeStreamWithRequestBuilder(options options: String? = nil) -> RequestBuilder<NSURL> {
        let path = "/Designs/change-stream"
        let URLString = TweakApiAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "options": options
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<NSURL>.Type = TweakApiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Create a change stream.
     
     - parameter options: (form)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func designCreateChangeStreamPostDesignsChangeStream(options options: String? = nil, completion: ((data: NSURL?, error: ErrorType?) -> Void)) {
        designCreateChangeStreamPostDesignsChangeStreamWithRequestBuilder(options: options).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Create a change stream.
     - POST /Designs/change-stream
     - API Key:
       - type: apiKey access_token (QUERY)
       - name: access_token
     - examples: [{contentType=application/json, example=""}]
     
     - parameter options: (form)  (optional)

     - returns: RequestBuilder<NSURL> 
     */
    public class func designCreateChangeStreamPostDesignsChangeStreamWithRequestBuilder(options options: String? = nil) -> RequestBuilder<NSURL> {
        let path = "/Designs/change-stream"
        let URLString = TweakApiAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "options": options
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<NSURL>.Type = TweakApiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Delete a model instance by {{id}} from the data source.
     
     - parameter id: (path) Model id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func designDeleteById(id id: String, completion: ((data: AnyObject?, error: ErrorType?) -> Void)) {
        designDeleteByIdWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Delete a model instance by {{id}} from the data source.
     - DELETE /Designs/{id}
     - API Key:
       - type: apiKey access_token (QUERY)
       - name: access_token
     - examples: [{contentType=application/json, example="{}"}]
     
     - parameter id: (path) Model id 

     - returns: RequestBuilder<AnyObject> 
     */
    public class func designDeleteByIdWithRequestBuilder(id id: String) -> RequestBuilder<AnyObject> {
        var path = "/Designs/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = TweakApiAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<AnyObject>.Type = TweakApiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Check whether a model instance exists in the data source.
     
     - parameter id: (path) Model id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func designExistsGetDesignsidExists(id id: String, completion: ((data: TWInlineResponse2002?, error: ErrorType?) -> Void)) {
        designExistsGetDesignsidExistsWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Check whether a model instance exists in the data source.
     - GET /Designs/{id}/exists
     - API Key:
       - type: apiKey access_token (QUERY)
       - name: access_token
     - examples: [{contentType=application/json, example={
  "exists" : true
}}]
     
     - parameter id: (path) Model id 

     - returns: RequestBuilder<TWInlineResponse2002> 
     */
    public class func designExistsGetDesignsidExistsWithRequestBuilder(id id: String) -> RequestBuilder<TWInlineResponse2002> {
        var path = "/Designs/{id}/exists"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = TweakApiAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<TWInlineResponse2002>.Type = TweakApiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Check whether a model instance exists in the data source.
     
     - parameter id: (path) Model id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func designExistsHeadDesignsid(id id: String, completion: ((data: TWInlineResponse2002?, error: ErrorType?) -> Void)) {
        designExistsHeadDesignsidWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Check whether a model instance exists in the data source.
     - HEAD /Designs/{id}
     - API Key:
       - type: apiKey access_token (QUERY)
       - name: access_token
     - examples: [{contentType=application/json, example={
  "exists" : true
}}]
     
     - parameter id: (path) Model id 

     - returns: RequestBuilder<TWInlineResponse2002> 
     */
    public class func designExistsHeadDesignsidWithRequestBuilder(id id: String) -> RequestBuilder<TWInlineResponse2002> {
        var path = "/Designs/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = TweakApiAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<TWInlineResponse2002>.Type = TweakApiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "HEAD", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Find all instances of the model matched by filter from the data source.
     
     - parameter filter: (query) Filter defining fields, where, include, order, offset, and limit (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func designFind(filter filter: String? = nil, completion: ((data: [TWDesign]?, error: ErrorType?) -> Void)) {
        designFindWithRequestBuilder(filter: filter).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Find all instances of the model matched by filter from the data source.
     - GET /Designs
     - API Key:
       - type: apiKey access_token (QUERY)
       - name: access_token
     - examples: [{contentType=application/json, example=[ {
  "image" : "aeiou",
  "thumbnail" : "aeiou",
  "name" : "aeiou",
  "customerId" : 1.3579000000000001069366817318950779736042022705078125,
  "id" : 1.3579000000000001069366817318950779736042022705078125,
  "categories" : [ "{}" ],
  "object" : "{}",
  "tags" : [ "{}" ],
  "customer" : "{}"
} ]}]
     
     - parameter filter: (query) Filter defining fields, where, include, order, offset, and limit (optional)

     - returns: RequestBuilder<[TWDesign]> 
     */
    public class func designFindWithRequestBuilder(filter filter: String? = nil) -> RequestBuilder<[TWDesign]> {
        let path = "/Designs"
        let URLString = TweakApiAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "filter": filter
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<[TWDesign]>.Type = TweakApiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Find a model instance by {{id}} from the data source.
     
     - parameter id: (path) Model id 
     - parameter filter: (query) Filter defining fields and include (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func designFindById(id id: String, filter: String? = nil, completion: ((data: TWDesign?, error: ErrorType?) -> Void)) {
        designFindByIdWithRequestBuilder(id: id, filter: filter).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Find a model instance by {{id}} from the data source.
     - GET /Designs/{id}
     - API Key:
       - type: apiKey access_token (QUERY)
       - name: access_token
     - examples: [{contentType=application/json, example={
  "image" : "aeiou",
  "thumbnail" : "aeiou",
  "name" : "aeiou",
  "customerId" : 1.3579000000000001069366817318950779736042022705078125,
  "id" : 1.3579000000000001069366817318950779736042022705078125,
  "categories" : [ "{}" ],
  "object" : "{}",
  "tags" : [ "{}" ],
  "customer" : "{}"
}}]
     
     - parameter id: (path) Model id 
     - parameter filter: (query) Filter defining fields and include (optional)

     - returns: RequestBuilder<TWDesign> 
     */
    public class func designFindByIdWithRequestBuilder(id id: String, filter: String? = nil) -> RequestBuilder<TWDesign> {
        var path = "/Designs/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = TweakApiAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "filter": filter
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<TWDesign>.Type = TweakApiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Find first instance of the model matched by filter from the data source.
     
     - parameter filter: (query) Filter defining fields, where, include, order, offset, and limit (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func designFindOne(filter filter: String? = nil, completion: ((data: TWDesign?, error: ErrorType?) -> Void)) {
        designFindOneWithRequestBuilder(filter: filter).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Find first instance of the model matched by filter from the data source.
     - GET /Designs/findOne
     - API Key:
       - type: apiKey access_token (QUERY)
       - name: access_token
     - examples: [{contentType=application/json, example={
  "image" : "aeiou",
  "thumbnail" : "aeiou",
  "name" : "aeiou",
  "customerId" : 1.3579000000000001069366817318950779736042022705078125,
  "id" : 1.3579000000000001069366817318950779736042022705078125,
  "categories" : [ "{}" ],
  "object" : "{}",
  "tags" : [ "{}" ],
  "customer" : "{}"
}}]
     
     - parameter filter: (query) Filter defining fields, where, include, order, offset, and limit (optional)

     - returns: RequestBuilder<TWDesign> 
     */
    public class func designFindOneWithRequestBuilder(filter filter: String? = nil) -> RequestBuilder<TWDesign> {
        let path = "/Designs/findOne"
        let URLString = TweakApiAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "filter": filter
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<TWDesign>.Type = TweakApiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Counts categories of Design.
     
     - parameter id: (path) Design id 
     - parameter _where: (query) Criteria to match model instances (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func designPrototypeCountCategories(id id: String, _where: String? = nil, completion: ((data: TWInlineResponse200?, error: ErrorType?) -> Void)) {
        designPrototypeCountCategoriesWithRequestBuilder(id: id, _where: _where).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Counts categories of Design.
     - GET /Designs/{id}/categories/count
     - API Key:
       - type: apiKey access_token (QUERY)
       - name: access_token
     - examples: [{contentType=application/json, example={
  "count" : 1.3579000000000001069366817318950779736042022705078125
}}]
     
     - parameter id: (path) Design id 
     - parameter _where: (query) Criteria to match model instances (optional)

     - returns: RequestBuilder<TWInlineResponse200> 
     */
    public class func designPrototypeCountCategoriesWithRequestBuilder(id id: String, _where: String? = nil) -> RequestBuilder<TWInlineResponse200> {
        var path = "/Designs/{id}/categories/count"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = TweakApiAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "where": _where
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<TWInlineResponse200>.Type = TweakApiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Counts tags of Design.
     
     - parameter id: (path) Design id 
     - parameter _where: (query) Criteria to match model instances (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func designPrototypeCountTags(id id: String, _where: String? = nil, completion: ((data: TWInlineResponse200?, error: ErrorType?) -> Void)) {
        designPrototypeCountTagsWithRequestBuilder(id: id, _where: _where).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Counts tags of Design.
     - GET /Designs/{id}/tags/count
     - API Key:
       - type: apiKey access_token (QUERY)
       - name: access_token
     - examples: [{contentType=application/json, example={
  "count" : 1.3579000000000001069366817318950779736042022705078125
}}]
     
     - parameter id: (path) Design id 
     - parameter _where: (query) Criteria to match model instances (optional)

     - returns: RequestBuilder<TWInlineResponse200> 
     */
    public class func designPrototypeCountTagsWithRequestBuilder(id id: String, _where: String? = nil) -> RequestBuilder<TWInlineResponse200> {
        var path = "/Designs/{id}/tags/count"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = TweakApiAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "where": _where
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<TWInlineResponse200>.Type = TweakApiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Creates a new instance in categories of this model.
     
     - parameter id: (path) Design id 
     - parameter data: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func designPrototypeCreateCategories(id id: String, data: TWCategory? = nil, completion: ((data: TWCategory?, error: ErrorType?) -> Void)) {
        designPrototypeCreateCategoriesWithRequestBuilder(id: id, data: data).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Creates a new instance in categories of this model.
     - POST /Designs/{id}/categories
     - API Key:
       - type: apiKey access_token (QUERY)
       - name: access_token
     - examples: [{contentType=application/json, example={
  "parent" : "{}",
  "children" : [ "{}" ],
  "name" : "aeiou",
  "description" : "aeiou",
  "designId" : 1.3579000000000001069366817318950779736042022705078125,
  "id" : 1.3579000000000001069366817318950779736042022705078125,
  "categoryId" : 1.3579000000000001069366817318950779736042022705078125,
  "parentId" : 1.3579000000000001069366817318950779736042022705078125
}}]
     
     - parameter id: (path) Design id 
     - parameter data: (body)  (optional)

     - returns: RequestBuilder<TWCategory> 
     */
    public class func designPrototypeCreateCategoriesWithRequestBuilder(id id: String, data: TWCategory? = nil) -> RequestBuilder<TWCategory> {
        var path = "/Designs/{id}/categories"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = TweakApiAPI.basePath + path
        let parameters = data?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<TWCategory>.Type = TweakApiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Creates a new instance in tags of this model.
     
     - parameter id: (path) Design id 
     - parameter data: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func designPrototypeCreateTags(id id: String, data: TWTag? = nil, completion: ((data: TWTag?, error: ErrorType?) -> Void)) {
        designPrototypeCreateTagsWithRequestBuilder(id: id, data: data).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Creates a new instance in tags of this model.
     - POST /Designs/{id}/tags
     - API Key:
       - type: apiKey access_token (QUERY)
       - name: access_token
     - examples: [{contentType=application/json, example={
  "name" : "aeiou",
  "designId" : 1.3579000000000001069366817318950779736042022705078125,
  "id" : 1.3579000000000001069366817318950779736042022705078125
}}]
     
     - parameter id: (path) Design id 
     - parameter data: (body)  (optional)

     - returns: RequestBuilder<TWTag> 
     */
    public class func designPrototypeCreateTagsWithRequestBuilder(id id: String, data: TWTag? = nil) -> RequestBuilder<TWTag> {
        var path = "/Designs/{id}/tags"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = TweakApiAPI.basePath + path
        let parameters = data?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<TWTag>.Type = TweakApiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Deletes all categories of this model.
     
     - parameter id: (path) Design id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func designPrototypeDeleteCategories(id id: String, completion: ((error: ErrorType?) -> Void)) {
        designPrototypeDeleteCategoriesWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     Deletes all categories of this model.
     - DELETE /Designs/{id}/categories
     - API Key:
       - type: apiKey access_token (QUERY)
       - name: access_token
     
     - parameter id: (path) Design id 

     - returns: RequestBuilder<Void> 
     */
    public class func designPrototypeDeleteCategoriesWithRequestBuilder(id id: String) -> RequestBuilder<Void> {
        var path = "/Designs/{id}/categories"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = TweakApiAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = TweakApiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Deletes all tags of this model.
     
     - parameter id: (path) Design id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func designPrototypeDeleteTags(id id: String, completion: ((error: ErrorType?) -> Void)) {
        designPrototypeDeleteTagsWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     Deletes all tags of this model.
     - DELETE /Designs/{id}/tags
     - API Key:
       - type: apiKey access_token (QUERY)
       - name: access_token
     
     - parameter id: (path) Design id 

     - returns: RequestBuilder<Void> 
     */
    public class func designPrototypeDeleteTagsWithRequestBuilder(id id: String) -> RequestBuilder<Void> {
        var path = "/Designs/{id}/tags"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = TweakApiAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = TweakApiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Delete a related item by id for categories.
     
     - parameter id: (path) Design id 
     - parameter fk: (path) Foreign key for categories 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func designPrototypeDestroyByIdCategories(id id: String, fk: String, completion: ((error: ErrorType?) -> Void)) {
        designPrototypeDestroyByIdCategoriesWithRequestBuilder(id: id, fk: fk).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     Delete a related item by id for categories.
     - DELETE /Designs/{id}/categories/{fk}
     - API Key:
       - type: apiKey access_token (QUERY)
       - name: access_token
     
     - parameter id: (path) Design id 
     - parameter fk: (path) Foreign key for categories 

     - returns: RequestBuilder<Void> 
     */
    public class func designPrototypeDestroyByIdCategoriesWithRequestBuilder(id id: String, fk: String) -> RequestBuilder<Void> {
        var path = "/Designs/{id}/categories/{fk}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{fk}", withString: "\(fk)", options: .LiteralSearch, range: nil)
        let URLString = TweakApiAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = TweakApiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Delete a related item by id for tags.
     
     - parameter id: (path) Design id 
     - parameter fk: (path) Foreign key for tags 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func designPrototypeDestroyByIdTags(id id: String, fk: String, completion: ((error: ErrorType?) -> Void)) {
        designPrototypeDestroyByIdTagsWithRequestBuilder(id: id, fk: fk).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     Delete a related item by id for tags.
     - DELETE /Designs/{id}/tags/{fk}
     - API Key:
       - type: apiKey access_token (QUERY)
       - name: access_token
     
     - parameter id: (path) Design id 
     - parameter fk: (path) Foreign key for tags 

     - returns: RequestBuilder<Void> 
     */
    public class func designPrototypeDestroyByIdTagsWithRequestBuilder(id id: String, fk: String) -> RequestBuilder<Void> {
        var path = "/Designs/{id}/tags/{fk}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{fk}", withString: "\(fk)", options: .LiteralSearch, range: nil)
        let URLString = TweakApiAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = TweakApiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Find a related item by id for categories.
     
     - parameter id: (path) Design id 
     - parameter fk: (path) Foreign key for categories 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func designPrototypeFindByIdCategories(id id: String, fk: String, completion: ((data: TWCategory?, error: ErrorType?) -> Void)) {
        designPrototypeFindByIdCategoriesWithRequestBuilder(id: id, fk: fk).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Find a related item by id for categories.
     - GET /Designs/{id}/categories/{fk}
     - API Key:
       - type: apiKey access_token (QUERY)
       - name: access_token
     - examples: [{contentType=application/json, example={
  "parent" : "{}",
  "children" : [ "{}" ],
  "name" : "aeiou",
  "description" : "aeiou",
  "designId" : 1.3579000000000001069366817318950779736042022705078125,
  "id" : 1.3579000000000001069366817318950779736042022705078125,
  "categoryId" : 1.3579000000000001069366817318950779736042022705078125,
  "parentId" : 1.3579000000000001069366817318950779736042022705078125
}}]
     
     - parameter id: (path) Design id 
     - parameter fk: (path) Foreign key for categories 

     - returns: RequestBuilder<TWCategory> 
     */
    public class func designPrototypeFindByIdCategoriesWithRequestBuilder(id id: String, fk: String) -> RequestBuilder<TWCategory> {
        var path = "/Designs/{id}/categories/{fk}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{fk}", withString: "\(fk)", options: .LiteralSearch, range: nil)
        let URLString = TweakApiAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<TWCategory>.Type = TweakApiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Find a related item by id for tags.
     
     - parameter id: (path) Design id 
     - parameter fk: (path) Foreign key for tags 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func designPrototypeFindByIdTags(id id: String, fk: String, completion: ((data: TWTag?, error: ErrorType?) -> Void)) {
        designPrototypeFindByIdTagsWithRequestBuilder(id: id, fk: fk).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Find a related item by id for tags.
     - GET /Designs/{id}/tags/{fk}
     - API Key:
       - type: apiKey access_token (QUERY)
       - name: access_token
     - examples: [{contentType=application/json, example={
  "name" : "aeiou",
  "designId" : 1.3579000000000001069366817318950779736042022705078125,
  "id" : 1.3579000000000001069366817318950779736042022705078125
}}]
     
     - parameter id: (path) Design id 
     - parameter fk: (path) Foreign key for tags 

     - returns: RequestBuilder<TWTag> 
     */
    public class func designPrototypeFindByIdTagsWithRequestBuilder(id id: String, fk: String) -> RequestBuilder<TWTag> {
        var path = "/Designs/{id}/tags/{fk}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{fk}", withString: "\(fk)", options: .LiteralSearch, range: nil)
        let URLString = TweakApiAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<TWTag>.Type = TweakApiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Queries categories of Design.
     
     - parameter id: (path) Design id 
     - parameter filter: (query)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func designPrototypeGetCategories(id id: String, filter: String? = nil, completion: ((data: [TWCategory]?, error: ErrorType?) -> Void)) {
        designPrototypeGetCategoriesWithRequestBuilder(id: id, filter: filter).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Queries categories of Design.
     - GET /Designs/{id}/categories
     - API Key:
       - type: apiKey access_token (QUERY)
       - name: access_token
     - examples: [{contentType=application/json, example=[ {
  "parent" : "{}",
  "children" : [ "{}" ],
  "name" : "aeiou",
  "description" : "aeiou",
  "designId" : 1.3579000000000001069366817318950779736042022705078125,
  "id" : 1.3579000000000001069366817318950779736042022705078125,
  "categoryId" : 1.3579000000000001069366817318950779736042022705078125,
  "parentId" : 1.3579000000000001069366817318950779736042022705078125
} ]}]
     
     - parameter id: (path) Design id 
     - parameter filter: (query)  (optional)

     - returns: RequestBuilder<[TWCategory]> 
     */
    public class func designPrototypeGetCategoriesWithRequestBuilder(id id: String, filter: String? = nil) -> RequestBuilder<[TWCategory]> {
        var path = "/Designs/{id}/categories"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = TweakApiAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "filter": filter
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<[TWCategory]>.Type = TweakApiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Fetches belongsTo relation customer.
     
     - parameter id: (path) Design id 
     - parameter refresh: (query)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func designPrototypeGetCustomer(id id: String, refresh: Bool? = nil, completion: ((data: TWCustomer?, error: ErrorType?) -> Void)) {
        designPrototypeGetCustomerWithRequestBuilder(id: id, refresh: refresh).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Fetches belongsTo relation customer.
     - GET /Designs/{id}/customer
     - API Key:
       - type: apiKey access_token (QUERY)
       - name: access_token
     - examples: [{contentType=application/json, example={
  "lastName" : "aeiou",
  "credentials" : "{}",
  "challenges" : "{}",
  "created" : "2000-01-23T04:56:07.000+00:00",
  "firstName" : "aeiou",
  "emailVerified" : true,
  "lastUpdated" : "2000-01-23T04:56:07.000+00:00",
  "realm" : "aeiou",
  "id" : 1.3579000000000001069366817318950779736042022705078125,
  "designs" : [ "{}" ],
  "email" : "aeiou",
  "username" : "aeiou",
  "status" : "aeiou"
}}]
     
     - parameter id: (path) Design id 
     - parameter refresh: (query)  (optional)

     - returns: RequestBuilder<TWCustomer> 
     */
    public class func designPrototypeGetCustomerWithRequestBuilder(id id: String, refresh: Bool? = nil) -> RequestBuilder<TWCustomer> {
        var path = "/Designs/{id}/customer"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = TweakApiAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "refresh": refresh
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<TWCustomer>.Type = TweakApiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Queries tags of Design.
     
     - parameter id: (path) Design id 
     - parameter filter: (query)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func designPrototypeGetTags(id id: String, filter: String? = nil, completion: ((data: [TWTag]?, error: ErrorType?) -> Void)) {
        designPrototypeGetTagsWithRequestBuilder(id: id, filter: filter).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Queries tags of Design.
     - GET /Designs/{id}/tags
     - API Key:
       - type: apiKey access_token (QUERY)
       - name: access_token
     - examples: [{contentType=application/json, example=[ {
  "name" : "aeiou",
  "designId" : 1.3579000000000001069366817318950779736042022705078125,
  "id" : 1.3579000000000001069366817318950779736042022705078125
} ]}]
     
     - parameter id: (path) Design id 
     - parameter filter: (query)  (optional)

     - returns: RequestBuilder<[TWTag]> 
     */
    public class func designPrototypeGetTagsWithRequestBuilder(id id: String, filter: String? = nil) -> RequestBuilder<[TWTag]> {
        var path = "/Designs/{id}/tags"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = TweakApiAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "filter": filter
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<[TWTag]>.Type = TweakApiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Patch attributes for a model instance and persist it into the data source.
     
     - parameter id: (path) Design id 
     - parameter data: (body) An object of model property name/value pairs (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func designPrototypeUpdateAttributesPatchDesignsid(id id: String, data: TWDesign? = nil, completion: ((data: TWDesign?, error: ErrorType?) -> Void)) {
        designPrototypeUpdateAttributesPatchDesignsidWithRequestBuilder(id: id, data: data).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Patch attributes for a model instance and persist it into the data source.
     - PATCH /Designs/{id}
     - API Key:
       - type: apiKey access_token (QUERY)
       - name: access_token
     - examples: [{contentType=application/json, example={
  "image" : "aeiou",
  "thumbnail" : "aeiou",
  "name" : "aeiou",
  "customerId" : 1.3579000000000001069366817318950779736042022705078125,
  "id" : 1.3579000000000001069366817318950779736042022705078125,
  "categories" : [ "{}" ],
  "object" : "{}",
  "tags" : [ "{}" ],
  "customer" : "{}"
}}]
     
     - parameter id: (path) Design id 
     - parameter data: (body) An object of model property name/value pairs (optional)

     - returns: RequestBuilder<TWDesign> 
     */
    public class func designPrototypeUpdateAttributesPatchDesignsidWithRequestBuilder(id id: String, data: TWDesign? = nil) -> RequestBuilder<TWDesign> {
        var path = "/Designs/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = TweakApiAPI.basePath + path
        let parameters = data?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<TWDesign>.Type = TweakApiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PATCH", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Patch attributes for a model instance and persist it into the data source.
     
     - parameter id: (path) Design id 
     - parameter data: (body) An object of model property name/value pairs (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func designPrototypeUpdateAttributesPutDesignsid(id id: String, data: TWDesign? = nil, completion: ((data: TWDesign?, error: ErrorType?) -> Void)) {
        designPrototypeUpdateAttributesPutDesignsidWithRequestBuilder(id: id, data: data).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Patch attributes for a model instance and persist it into the data source.
     - PUT /Designs/{id}
     - API Key:
       - type: apiKey access_token (QUERY)
       - name: access_token
     - examples: [{contentType=application/json, example={
  "image" : "aeiou",
  "thumbnail" : "aeiou",
  "name" : "aeiou",
  "customerId" : 1.3579000000000001069366817318950779736042022705078125,
  "id" : 1.3579000000000001069366817318950779736042022705078125,
  "categories" : [ "{}" ],
  "object" : "{}",
  "tags" : [ "{}" ],
  "customer" : "{}"
}}]
     
     - parameter id: (path) Design id 
     - parameter data: (body) An object of model property name/value pairs (optional)

     - returns: RequestBuilder<TWDesign> 
     */
    public class func designPrototypeUpdateAttributesPutDesignsidWithRequestBuilder(id id: String, data: TWDesign? = nil) -> RequestBuilder<TWDesign> {
        var path = "/Designs/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = TweakApiAPI.basePath + path
        let parameters = data?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<TWDesign>.Type = TweakApiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Update a related item by id for categories.
     
     - parameter id: (path) Design id 
     - parameter fk: (path) Foreign key for categories 
     - parameter data: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func designPrototypeUpdateByIdCategories(id id: String, fk: String, data: TWCategory? = nil, completion: ((data: TWCategory?, error: ErrorType?) -> Void)) {
        designPrototypeUpdateByIdCategoriesWithRequestBuilder(id: id, fk: fk, data: data).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Update a related item by id for categories.
     - PUT /Designs/{id}/categories/{fk}
     - API Key:
       - type: apiKey access_token (QUERY)
       - name: access_token
     - examples: [{contentType=application/json, example={
  "parent" : "{}",
  "children" : [ "{}" ],
  "name" : "aeiou",
  "description" : "aeiou",
  "designId" : 1.3579000000000001069366817318950779736042022705078125,
  "id" : 1.3579000000000001069366817318950779736042022705078125,
  "categoryId" : 1.3579000000000001069366817318950779736042022705078125,
  "parentId" : 1.3579000000000001069366817318950779736042022705078125
}}]
     
     - parameter id: (path) Design id 
     - parameter fk: (path) Foreign key for categories 
     - parameter data: (body)  (optional)

     - returns: RequestBuilder<TWCategory> 
     */
    public class func designPrototypeUpdateByIdCategoriesWithRequestBuilder(id id: String, fk: String, data: TWCategory? = nil) -> RequestBuilder<TWCategory> {
        var path = "/Designs/{id}/categories/{fk}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{fk}", withString: "\(fk)", options: .LiteralSearch, range: nil)
        let URLString = TweakApiAPI.basePath + path
        let parameters = data?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<TWCategory>.Type = TweakApiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Update a related item by id for tags.
     
     - parameter id: (path) Design id 
     - parameter fk: (path) Foreign key for tags 
     - parameter data: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func designPrototypeUpdateByIdTags(id id: String, fk: String, data: TWTag? = nil, completion: ((data: TWTag?, error: ErrorType?) -> Void)) {
        designPrototypeUpdateByIdTagsWithRequestBuilder(id: id, fk: fk, data: data).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Update a related item by id for tags.
     - PUT /Designs/{id}/tags/{fk}
     - API Key:
       - type: apiKey access_token (QUERY)
       - name: access_token
     - examples: [{contentType=application/json, example={
  "name" : "aeiou",
  "designId" : 1.3579000000000001069366817318950779736042022705078125,
  "id" : 1.3579000000000001069366817318950779736042022705078125
}}]
     
     - parameter id: (path) Design id 
     - parameter fk: (path) Foreign key for tags 
     - parameter data: (body)  (optional)

     - returns: RequestBuilder<TWTag> 
     */
    public class func designPrototypeUpdateByIdTagsWithRequestBuilder(id id: String, fk: String, data: TWTag? = nil) -> RequestBuilder<TWTag> {
        var path = "/Designs/{id}/tags/{fk}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{fk}", withString: "\(fk)", options: .LiteralSearch, range: nil)
        let URLString = TweakApiAPI.basePath + path
        let parameters = data?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<TWTag>.Type = TweakApiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Replace attributes for a model instance and persist it into the data source.
     
     - parameter id: (path) Model id 
     - parameter data: (body) Model instance data (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func designReplaceById(id id: String, data: TWDesign? = nil, completion: ((data: TWDesign?, error: ErrorType?) -> Void)) {
        designReplaceByIdWithRequestBuilder(id: id, data: data).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Replace attributes for a model instance and persist it into the data source.
     - POST /Designs/{id}/replace
     - API Key:
       - type: apiKey access_token (QUERY)
       - name: access_token
     - examples: [{contentType=application/json, example={
  "image" : "aeiou",
  "thumbnail" : "aeiou",
  "name" : "aeiou",
  "customerId" : 1.3579000000000001069366817318950779736042022705078125,
  "id" : 1.3579000000000001069366817318950779736042022705078125,
  "categories" : [ "{}" ],
  "object" : "{}",
  "tags" : [ "{}" ],
  "customer" : "{}"
}}]
     
     - parameter id: (path) Model id 
     - parameter data: (body) Model instance data (optional)

     - returns: RequestBuilder<TWDesign> 
     */
    public class func designReplaceByIdWithRequestBuilder(id id: String, data: TWDesign? = nil) -> RequestBuilder<TWDesign> {
        var path = "/Designs/{id}/replace"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = TweakApiAPI.basePath + path
        let parameters = data?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<TWDesign>.Type = TweakApiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Replace an existing model instance or insert a new one into the data source.
     
     - parameter data: (body) Model instance data (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func designReplaceOrCreate(data data: TWDesign? = nil, completion: ((data: TWDesign?, error: ErrorType?) -> Void)) {
        designReplaceOrCreateWithRequestBuilder(data: data).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Replace an existing model instance or insert a new one into the data source.
     - POST /Designs/replaceOrCreate
     - API Key:
       - type: apiKey access_token (QUERY)
       - name: access_token
     - examples: [{contentType=application/json, example={
  "image" : "aeiou",
  "thumbnail" : "aeiou",
  "name" : "aeiou",
  "customerId" : 1.3579000000000001069366817318950779736042022705078125,
  "id" : 1.3579000000000001069366817318950779736042022705078125,
  "categories" : [ "{}" ],
  "object" : "{}",
  "tags" : [ "{}" ],
  "customer" : "{}"
}}]
     
     - parameter data: (body) Model instance data (optional)

     - returns: RequestBuilder<TWDesign> 
     */
    public class func designReplaceOrCreateWithRequestBuilder(data data: TWDesign? = nil) -> RequestBuilder<TWDesign> {
        let path = "/Designs/replaceOrCreate"
        let URLString = TweakApiAPI.basePath + path
        let parameters = data?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<TWDesign>.Type = TweakApiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Update instances of the model matched by {{where}} from the data source.
     
     - parameter _where: (query) Criteria to match model instances (optional)
     - parameter data: (body) An object of model property name/value pairs (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func designUpdateAll(_where _where: String? = nil, data: TWDesign? = nil, completion: ((data: TWInlineResponse2001?, error: ErrorType?) -> Void)) {
        designUpdateAllWithRequestBuilder(_where: _where, data: data).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Update instances of the model matched by {{where}} from the data source.
     - POST /Designs/update
     - API Key:
       - type: apiKey access_token (QUERY)
       - name: access_token
     - examples: [{contentType=application/json, example={
  "count" : 1.3579000000000001069366817318950779736042022705078125
}}]
     
     - parameter _where: (query) Criteria to match model instances (optional)
     - parameter data: (body) An object of model property name/value pairs (optional)

     - returns: RequestBuilder<TWInlineResponse2001> 
     */
    public class func designUpdateAllWithRequestBuilder(_where _where: String? = nil, data: TWDesign? = nil) -> RequestBuilder<TWInlineResponse2001> {
        let path = "/Designs/update"
        let URLString = TweakApiAPI.basePath + path
        let parameters = data?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<TWInlineResponse2001>.Type = TweakApiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Patch an existing model instance or insert a new one into the data source.
     
     - parameter data: (body) Model instance data (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func designUpsertPatchDesigns(data data: TWDesign? = nil, completion: ((data: TWDesign?, error: ErrorType?) -> Void)) {
        designUpsertPatchDesignsWithRequestBuilder(data: data).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Patch an existing model instance or insert a new one into the data source.
     - PATCH /Designs
     - API Key:
       - type: apiKey access_token (QUERY)
       - name: access_token
     - examples: [{contentType=application/json, example={
  "image" : "aeiou",
  "thumbnail" : "aeiou",
  "name" : "aeiou",
  "customerId" : 1.3579000000000001069366817318950779736042022705078125,
  "id" : 1.3579000000000001069366817318950779736042022705078125,
  "categories" : [ "{}" ],
  "object" : "{}",
  "tags" : [ "{}" ],
  "customer" : "{}"
}}]
     
     - parameter data: (body) Model instance data (optional)

     - returns: RequestBuilder<TWDesign> 
     */
    public class func designUpsertPatchDesignsWithRequestBuilder(data data: TWDesign? = nil) -> RequestBuilder<TWDesign> {
        let path = "/Designs"
        let URLString = TweakApiAPI.basePath + path
        let parameters = data?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<TWDesign>.Type = TweakApiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PATCH", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Patch an existing model instance or insert a new one into the data source.
     
     - parameter data: (body) Model instance data (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func designUpsertPutDesigns(data data: TWDesign? = nil, completion: ((data: TWDesign?, error: ErrorType?) -> Void)) {
        designUpsertPutDesignsWithRequestBuilder(data: data).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Patch an existing model instance or insert a new one into the data source.
     - PUT /Designs
     - API Key:
       - type: apiKey access_token (QUERY)
       - name: access_token
     - examples: [{contentType=application/json, example={
  "image" : "aeiou",
  "thumbnail" : "aeiou",
  "name" : "aeiou",
  "customerId" : 1.3579000000000001069366817318950779736042022705078125,
  "id" : 1.3579000000000001069366817318950779736042022705078125,
  "categories" : [ "{}" ],
  "object" : "{}",
  "tags" : [ "{}" ],
  "customer" : "{}"
}}]
     
     - parameter data: (body) Model instance data (optional)

     - returns: RequestBuilder<TWDesign> 
     */
    public class func designUpsertPutDesignsWithRequestBuilder(data data: TWDesign? = nil) -> RequestBuilder<TWDesign> {
        let path = "/Designs"
        let URLString = TweakApiAPI.basePath + path
        let parameters = data?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<TWDesign>.Type = TweakApiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Update an existing model instance or insert a new one into the data source based on the where criteria.
     
     - parameter _where: (query) Criteria to match model instances (optional)
     - parameter data: (body) An object of model property name/value pairs (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func designUpsertWithWhere(_where _where: String? = nil, data: TWDesign? = nil, completion: ((data: TWDesign?, error: ErrorType?) -> Void)) {
        designUpsertWithWhereWithRequestBuilder(_where: _where, data: data).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Update an existing model instance or insert a new one into the data source based on the where criteria.
     - POST /Designs/upsertWithWhere
     - API Key:
       - type: apiKey access_token (QUERY)
       - name: access_token
     - examples: [{contentType=application/json, example={
  "image" : "aeiou",
  "thumbnail" : "aeiou",
  "name" : "aeiou",
  "customerId" : 1.3579000000000001069366817318950779736042022705078125,
  "id" : 1.3579000000000001069366817318950779736042022705078125,
  "categories" : [ "{}" ],
  "object" : "{}",
  "tags" : [ "{}" ],
  "customer" : "{}"
}}]
     
     - parameter _where: (query) Criteria to match model instances (optional)
     - parameter data: (body) An object of model property name/value pairs (optional)

     - returns: RequestBuilder<TWDesign> 
     */
    public class func designUpsertWithWhereWithRequestBuilder(_where _where: String? = nil, data: TWDesign? = nil) -> RequestBuilder<TWDesign> {
        let path = "/Designs/upsertWithWhere"
        let URLString = TweakApiAPI.basePath + path
        let parameters = data?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<TWDesign>.Type = TweakApiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

}
